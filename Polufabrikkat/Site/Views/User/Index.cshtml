@using Polufabrikkat.Core.Models.TikTok
@using Polufabrikkat.Site.Models.User;
@using System.Text.Json

@model UserViewModel

@{
    ViewData["Title"] = "Profile";
}

@section Styles
{
	<link rel="stylesheet" href="~/css/pages/user.css" asp-append-version="true" />
}

@section Scripts
{
	<script src="~/js/pages/user/user.js" asp-append-version="true"></script>
}

<!-- User Profile Section -->
<section class="profile-section">
	<div class="container" id="tiktok-users-app">
		<h1>User Profile</h1>

		<!-- Display User Information -->
		<div class="profile-info">
			<p><strong>Username:</strong> @Model.User.Username</p>
			@* <p><strong>Email:</strong> johndoe@example.com</p> *@
		</div>

		<!-- Change Password Button -->
		<div class="change-password">
			<button class="button button-primary">Change Password</button>
		</div>

		<!-- List of Linked TikTok Users -->
		<div class="tiktok-users">
			<h2>Linked TikTok Users</h2>
			<ul class="tiktok-list">
				<li v-for="user in tiktokUsers" :key="user.id">
					<p>{{user.displayName}}</p>
					<button class="button button-secondary" @@click="user.remove()" :disabled="user.loading">
						Unlink
					</button>
				</li>
			</ul>
		</div>

		<!-- Link New TikTok User -->
		<div class="tiktok-actions">
			<a class="button button-primary" href='@Model.AddTikTokUserUrl'>Link New TikTok User</a>
		</div>

		<!-- Sign Off Button -->
		<div class="sign-off">
			<a class="button button-secondary" href='@Url.Action("Logout", "Home")'>Sign Off</a>
		</div>
	</div>
</section>

<script>
	var removeTikTokUserUrl = '@Url.Action("RemoveTikTokUser", "User")';
	var modelTikTokUsers = @Html.Raw(JsonSerializer.Serialize(Model.User.TikTokUsers, new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase }));
</script>