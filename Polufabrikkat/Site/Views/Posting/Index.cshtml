@using Polufabrikkat.Site.Models.Posting
@using System.Text.Json
@model PostHistoryViewModel

@section Styles
{
	<link rel="stylesheet" href="~/css/pages/postHistory.css" asp-append-version="true" />
}

@section Scripts
{
	<script src="~/js/pages/posting/postHistory.js" asp-append-version="true"></script>
}

@{
	ViewData["Title"] = "Posts History";
}

<div class="container" id="post-history-app">
	<h1>@ViewData["Title"]</h1>

	<!-- Post List -->
	<div v-if="posts.length > 0" class="post-list">
		<div class="post-item" v-for="(post, index) in posts" :key="post.id">
			<h3>{{ post.title }}</h3>
			<p>{{ post.description }}</p>
			<p><strong>Status:</strong> {{ post.status }}</p>
			<p><strong>Type:</strong> {{ post.type }}</p>
			<p><strong>Created:</strong> {{ post.created }}</p>
			<p v-if="post.scheduledPublicationTime"><strong>Scheduled Time:</strong> {{ post.scheduledPublicationTime }}</p>
			<p><strong>Files Count:</strong> {{ post.filesCount }}</p>
			<!-- Actions: View, Edit, Delete -->
			<div class="post-actions">
				<button class="button button-primary">View</button>
			</div>
		</div>
	</div>

	<!-- No Posts Message -->
	<div v-else>
		<p>No posts available.</p>
	</div>
</div>

<script>
	var posts = @Html.Raw(JsonSerializer.Serialize(Model.Posts, new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase }));
</script>